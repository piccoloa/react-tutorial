{"version":3,"sources":["Table.js","Form.js","App.js","index.js"],"names":["TableHeader","TableBody","props","rows","characterData","map","row","index","name","job","onClick","removeCharacter","Table","Form","initialState","state","handleChange","event","target","value","setState","submitForm","handleSubmit","this","htmlFor","type","id","onChange","Component","App","characters","filter","character","i","className","ReactDOM","render","document","getElementById"],"mappings":"wNAGMA,EAAc,WAChB,OACE,gCACE,+BACE,sCACA,2CAMFC,EAAY,SAACC,GACjB,IAAMC,EAAOD,EAAME,cAAcC,KAAI,SAACC,EAAKC,GAEzC,OACE,+BACI,6BAAKD,EAAIE,OACT,6BAAKF,EAAIG,MACb,6BACK,wBAAQC,QAAS,kBAAMR,EAAMS,gBAAgBJ,IAA7C,wBAJIA,MAUb,OAAO,gCAAQJ,KAcJS,EAXC,SAACV,GAAW,IACjBE,EAAkCF,EAAlCE,cAAeO,EAAmBT,EAAnBS,gBAEtB,OACE,kCACE,cAAC,EAAD,IACA,cAAC,EAAD,CAAWP,cAAeA,EAAeO,gBAAiBA,Q,OCcnDE,E,4MAhDbC,aAAe,CACbN,KAAM,GACNC,IAAK,I,EAGPM,MAAQ,EAAKD,a,EACbE,aAAe,SAACC,GAAW,IAAD,EACFA,EAAMC,OAArBV,EADiB,EACjBA,KAAMW,EADW,EACXA,MAEb,EAAKC,SAAL,eACGZ,EAAOW,K,EAMVE,WAAa,WACT,EAAKnB,MAAMoB,aAAa,EAAKP,OAC7B,EAAKK,SAAS,EAAKN,e,uDAGf,IAAD,EACeS,KAAKR,MAAnBP,EADD,EACCA,KAAMC,EADP,EACOA,IAEd,OACE,iCACE,uBAAOe,QAAQ,OAAf,kBACA,uBACEC,KAAK,OACLjB,KAAK,OACLkB,GAAG,OACHP,MAAOX,EACPmB,SAAUJ,KAAKP,eACjB,uBAAOQ,QAAQ,MAAf,iBACA,uBACEC,KAAK,OACLjB,KAAK,MACLkB,GAAG,MACHP,MAAOV,EACPkB,SAAUJ,KAAKP,eAEjB,uBAAOS,KAAK,SAASN,MAAM,SAAST,QAASa,KAAKF,oB,GA1CvCO,aCkCJC,E,4MA7BXd,MAAQ,CACJe,WAAY,I,EAEdnB,gBAAkB,SAACJ,GAAW,IACrBuB,EAAc,EAAKf,MAAnBe,WAEP,EAAKV,SAAS,CACZU,WAAYA,EAAWC,QAAO,SAACC,EAAWC,GACxC,OAAOA,IAAM1B,Q,EAKnBe,aAAe,SAACU,GACd,EAAKZ,SAAS,CAACU,WAAW,GAAD,mBAAM,EAAKf,MAAMe,YAAjB,CAA6BE,O,uDAG9C,IACAF,EAAeP,KAAKR,MAApBe,WAER,OACE,sBAAKI,UAAU,YAAf,UACE,cAAC,EAAD,CAAO9B,cAAe0B,EAAYnB,gBAAiBY,KAAKZ,kBACxD,cAAC,EAAD,CAAMW,aAAcC,KAAKD,sB,GAxBnBM,a,MCDlBO,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.1ce40397.chunk.js","sourcesContent":["import React from 'react'\n// import React, {Component} from 'react'\n\nconst TableHeader = () => {\n    return (\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Job</th>\n        </tr>\n      </thead>\n    )\n  }\n\n  const TableBody = (props) => {\n    const rows = props.characterData.map((row, index) => {\n        // You should always use keys when making lists in React, as they help identify each list item\n      return (\n        <tr key={index}>\n            <td>{row.name}</td>\n            <td>{row.job}</td>\n        <td>\n             <button onClick={() => props.removeCharacter(index)}>Delete</button>\n    </td>\n</tr>\n      )\n    })\n  \n    return <tbody>{rows}</tbody>\n  }\n\n  const Table = (props) => {\n    const {characterData, removeCharacter} = props\n  \n    return (\n      <table>\n        <TableHeader />\n        <TableBody characterData={characterData} removeCharacter={removeCharacter} />\n      </table>\n    )\n  }\n\nexport default Table","import React, {Component} from 'react'\n\nclass Form extends Component {\n  initialState = {\n    name: '',\n    job: '',\n  }\n\n  state = this.initialState\n  handleChange = (event) => {\n    const {name, value} = event.target\n  \n    this.setState({\n      [name]: value,\n    })\n\n    \n  }\n\n    submitForm = () => {\n        this.props.handleSubmit(this.state)\n        this.setState(this.initialState)\n    }\n\n  render() {\n    const { name, job } = this.state;\n  \n    return (\n      <form>\n        <label htmlFor=\"name\">Name</label>\n        <input\n          type=\"text\"\n          name=\"name\"\n          id=\"name\"\n          value={name}\n          onChange={this.handleChange} />\n        <label htmlFor=\"job\">Job</label>\n        <input\n          type=\"text\"\n          name=\"job\"\n          id=\"job\"\n          value={job}\n          onChange={this.handleChange} />\n\n        <input type=\"button\" value=\"Submit\" onClick={this.submitForm} />\n          \n      </form>\n    );\n  }\n}\n\nexport default Form;","import React, {Component} from 'react'\nimport Table from './Table'\nimport Form from './Form'\n\n\n\nclass App extends Component { \n    state = {\n        characters: [],\n      }\n      removeCharacter = (index) => {\n        const {characters} = this.state\n      \n        this.setState({\n          characters: characters.filter((character, i) => {\n            return i !== index\n          }),\n        })\n      }\n\n      handleSubmit = (character) => {\n        this.setState({characters: [...this.state.characters, character]})\n      }\n\n      render() {\n        const { characters } = this.state\n      \n        return (\n          <div className=\"container\">\n            <Table characterData={characters} removeCharacter={this.removeCharacter} />\n            <Form handleSubmit={this.handleSubmit} />\n          </div>\n        )\n      }\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}